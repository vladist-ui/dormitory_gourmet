from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from services.api_client import GoogleSheetsClient
from keyboards.inline import get_cancel_keyboard, get_order_confirmation_keyboard
from callbacks.reserve import ReserveCallback, CancelCallback
from config.settings import Config

router = Router()


class ReserveStates(StatesGroup):
    waiting_for_amount = State()
    waiting_for_room = State()
    waiting_for_receipt = State()


@router.callback_query(ReserveCallback.filter())
async def process_reserve(
    callback: CallbackQuery,
    callback_data: ReserveCallback,
    state: FSMContext,
    sheets: GoogleSheetsClient,
):
    print(f"Processing reserve callback for user {callback.from_user.id}")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–æ–Ω—Å–∞
        announcement = sheets.get_announcement_by_id(callback_data.announcement_id)
        if not announcement:
            await callback.answer("–ê–Ω–æ–Ω—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.update_data(
            announcement_id=callback_data.announcement_id,
            dish_name=announcement["–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞"],
            price=announcement["–¶–µ–Ω–∞"],
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Ä—Ü–∏–π
        await callback.message.edit_text(
            f"üçΩ *{announcement['–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞']}*\n\n"
            f"üí∞ –¶–µ–Ω–∞ –∑–∞ –ø–æ—Ä—Ü–∏—é: {announcement['–¶–µ–Ω–∞']}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:",
            reply_markup=get_cancel_keyboard(),
        )

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Ä—Ü–∏–π
        await state.set_state(ReserveStates.waiting_for_amount)

    except Exception as e:
        print(f"Error in process_reserve: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.message(ReserveStates.waiting_for_amount)
async def process_amount(
    message: Message, state: FSMContext, sheets: GoogleSheetsClient
):
    try:
        try:
            portions = int(message.text)
            if portions <= 0:
                raise ValueError
        except ValueError:
            await message.answer(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π (—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ):",
                reply_markup=get_cancel_keyboard(),
            )
            return

        data = await state.get_data()
        price = data["price"]
        total_amount = int(price) * portions
        await state.update_data(portions=portions)

        await message.answer(
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –±–ª–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 804a):",
            reply_markup=get_cancel_keyboard(),
        )
        await state.set_state(ReserveStates.waiting_for_room)
    except Exception as e:
        print(f"Error in process_amount: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.",
            reply_markup=get_cancel_keyboard(),
        )


@router.message(ReserveStates.waiting_for_room)
async def process_room(message: Message, state: FSMContext, sheets: GoogleSheetsClient):
    room = message.text.strip()
    await state.update_data(room=room)
    data = await state.get_data()
    portions = data["portions"]
    price = data["price"]
    total_amount = int(price) * int(portions)
    await message.answer(
        f"üçΩ *{data['dish_name']}*\n"
        f"–ë–ª–æ–∫: {room}\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π: {portions}\n"
        f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total_amount}\n\n"
        f"üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n"
        f"–¢–∏–Ω—å–∫–æ—Ñ—Ñ: +777777777777\n\n"
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {total_amount} —Ä—É–±–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞:",
        reply_markup=get_cancel_keyboard(),
    )
    await state.set_state(ReserveStates.waiting_for_receipt)


@router.message(ReserveStates.waiting_for_receipt, F.photo)
async def process_receipt(
    message: Message, state: FSMContext, sheets: GoogleSheetsClient, config: Config
):
    try:
        data = await state.get_data()
        announcement_id = data.get("announcement_id")
        dish_name = data.get("dish_name")
        portions = data.get("portions")
        room = data.get("room")
        if not all([announcement_id, dish_name, portions, room]):
            await message.answer(
                "–û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.",
                reply_markup=get_cancel_keyboard(),
            )
            return
        photo = message.photo[-1]
        file_id = photo.file_id
        from datetime import datetime

        dt = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        username = message.from_user.username or "-"
        order_id = str(message.message_id)
        sheets.add_order(
            user_id=message.from_user.id,
            username=username,
            room=room,
            portions=portions,
            dt=dt,
            dish_name=dish_name,
            order_id=order_id,
            canceled="–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
        )
        for admin_id in config.tg_bot.admin_ids:
            try:
                await message.bot.send_photo(
                    chat_id=admin_id,
                    photo=file_id,
                    caption=f"üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n"
                    f"üçΩ –ë–ª—é–¥–æ: {dish_name}\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.id} (@{username})\n"
                    f"üè¢ –ë–ª–æ–∫: {room}\n"
                    f"üçΩ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π: {portions}",
                    reply_markup=get_order_confirmation_keyboard(order_id),
                )
            except Exception as e:
                print(f"Error sending notification to admin {admin_id}: {e}")
        await message.answer(
            f"‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"üçΩ –ë–ª—é–¥–æ: {dish_name}\n"
            f"üè¢ –ë–ª–æ–∫: {room}\n"
            f"üçΩ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π: {portions}\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ª–∞—Ç—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º –≤–∞—à –∑–∞–∫–∞–∑."
        )
        await state.clear()
    except Exception as e:
        print(f"Error in process_receipt: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )


@router.callback_query(CancelCallback.filter())
async def process_cancel(callback: CallbackQuery, state: FSMContext):
    try:
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
        await callback.message.edit_text("‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=None)

    except Exception as e:
        print(f"Error in process_cancel: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ", show_alert=True)
